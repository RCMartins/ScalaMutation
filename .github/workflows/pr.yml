name: PR

on:
  pull_request:

jobs:
  checks:
    name: Scalafmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: adopt:8
          apps: sbt
      - run: sbt scalafmtCheckAll scalafmtSbtCheck
  self-checks-core:
    name: Self Blinky core module
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: adopt:8
          apps: sbt bloop
      - run: ./.github/scripts/setup.sh
      - run: sbt "runCurrent \"ci-tests/core.blinky.conf\" --multiRun 1/1"
  self-checks-cli:
    name: Self Blinky cli module
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: adopt:8
          apps: sbt bloop
      - run: ./.github/scripts/setup.sh
      - run: sbt "runCurrent \"ci-tests/cli.blinky.conf\" --multiRun 1/1"
  integration:
    name: Integration
    runs-on: ubuntu-latest
    steps:
      - timeout-minutes: 20
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: adopt:8
          apps: sbt bloop
      - run: ./.github/scripts/setup.sh
      - run: sbt runExamples
  #communityTests:
  #  name: Community projects tests
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: olafurpg/setup-scala@v10
  #    - uses: laughedelic/coursier-setup@v1
  #      with:
  #        jvm: adopt:8
  #        apps: bloop
  #    - run: ./.github/scripts/setup.sh
  #    - run: sbt "runCommunityProjects spire"
  #scalaTests:
  #  name: Run Tests Matrix
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix:
  #      scalaVersion: [2.13.5]
  #    fail-fast: false
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: olafurpg/setup-scala@v10
  #    - run: sbt "++ $VERSION_TO_TEST!" core/test cli/test tests/test
  #      env:
  #        VERSION_TO_TEST: ${{ matrix.scalaVersion }}
